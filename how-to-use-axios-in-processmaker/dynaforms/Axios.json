{"name":"Axios","description":"","items":[{"type":"form","variable":"","var_uid":"","dataType":"","id":"3310970626035f33cf0baf8094637298","name":"Axios","description":"","mode":"edit","script":{"type":"js","code":"\nconst host = PMDynaform.getHostName(); /* get the hostname */\nconst ws = PMDynaform.getWorkspaceName(); /* get the current workspace */\nconst token = PMDynaform.getAccessToken(); /* get the access Token */\nconst app_uid = frames.app_uid ? frames.app_uid : ''; /* get the case ID */\n\nconst postsTrigUid = \"5981547606035f2a5306d74085295262\"; /* Trigger ID of 'Get All Posts' */\nconst todosTrigUid = \"2269777596035f2b352c5b0067833332\"; /* Trigger ID of 'Get All Todos' */\nconst userTrigUid = \"57622575360369f3db62b44094157946\"; /* Trigger ID of 'Get User' */\n\n/* AXIOS GLOBALS - set default global config */\naxios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n\n\n\n/* get posts */\ndocument.getElementById('btnGetPosts').addEventListener('click', function() {\n\n  getPosts()\n  .then(postsResponse => {\n \n    showOutput({id: 'panelPostsResult', data: postsResponse.data});\n    \n  })\n\n});\n\n\n\n/* get todos and posts */\ndocument.getElementById('btnGetTodos').addEventListener('click', function() {\n  \n  Promise.all([getPosts(), getTodos()])\n  .then(function (results) {\n    const posts = results[0];\n    const todos = results[1];\n    \n    showOutput({id: 'panelPostsResult', data: posts.data});\n    showOutput({id: 'panelTodosResult', data: todos.data});\n    \n  });\n\n});\n\n\n/* get user */\ndocument.getElementById('btnGetUser').addEventListener('click', function() {\n  \n  let id;\n  id = $('#userId').getValue();\n  \n  let getUserResponse = getUser(id);\n\n  getUserResponse\n  .then(userResponse => {\n \n    showOutput({id: 'panelUserResult', data: userResponse.data});\n    console.log(userResponse);\n    \n  })\n\n});\n\n\nfunction showOutput(output) {\n\n  document.getElementById(output.id).innerHTML = `\n\t\t<pre>${JSON.stringify(output.data, null, 2)}</pre>\n  `;\n\n}\n\n\nfunction getPosts() {\n  const url = host + \"/api/1.0/\" + ws + \"/cases/\" + app_uid + \"/execute-trigger/\" + postsTrigUid;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\t\n  return axios({\n\n    method: 'put',\n    url: url,\n    config\n\n  })\n  \n\n}\n\nfunction getTodos() {\n  const url = host + \"/api/1.0/\" + ws + \"/cases/\" + app_uid + \"/execute-trigger/\" + todosTrigUid;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\t\n  return axios({\n\n    method: 'put',\n    url: url,\n    config\n\n  })\n  \n\n}\n\nfunction getUser($id) {\n  \n  const url = host + \"/api/1.0/\" + ws + \"/cases/\" + app_uid + \"/execute-trigger/\" + userTrigUid;\n  const data = JSON.stringify({ id: $id });\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\t\n  \n  return axios({\n\n    method: 'put',\n    url: url,\n    data,\n    config\n\n  })\n  \n  \n}\n\n\n\n\n\n\n\n\n\n"},"language":"en","externalLibs":"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js","printable":false,"items":[[{"type":"panel","id":"panelTitle","content":"<div style=\"background:#286090; \n            color:#fff; \n            text-align:center; \n            padding-top: 12px; \n            padding-bottom: 15px; \n            margin-top: 37px;\" \n     \n     class='container-fluid jumbotron'>\n\n  <h4>Axios API in ProcessMaker</h4>\n\n</div>\n\n\n<style>\n  body {\n  \tmargin-bottom: 50px;\n  }\n</style>","border":"0","colSpan":12}],[{"type":"button","id":"btnGetPosts","name":"btnGetPosts","label":"Get Posts","colSpan":6},{"type":"button","id":"btnGetTodos","name":"btnGetTodos","label":"Get Posts and Todos","colSpan":6}],[{"type":"panel","id":"panelPostsTitle","content":"<div style=\"background:#286090; \n            color:#fff; \n            text-align:center; \n            padding-top: 12px; \n            padding-bottom: 15px; \n            margin-top: 37px;\" \n     \n     class='container-fluid jumbotron'>\n\n  <h4>Posts Result</h4>\n\n</div>","border":"0","colSpan":6},{"type":"panel","id":"panelTodosTitle","content":"<div style=\"background:#286090; \n            color:#fff; \n            text-align:center; \n            padding-top: 12px; \n            padding-bottom: 15px; \n            margin-top: 37px;\" \n     \n     class='container-fluid jumbotron'>\n\n  <h4>Todos Result</h4>\n\n</div>","border":"0","colSpan":6}],[{"type":"panel","id":"panelPostsResult","content":"<div class=\"panel panel-default\" id=\"resultPanel\" style=\"height: 100px\">\n\t\n</div>\n","border":"0","colSpan":6},{"type":"panel","id":"panelTodosResult","content":"<div class=\"panel panel-default\" id=\"resultPanel\" style=\"height: 100px\">\n\t\n</div>\n","border":"0","colSpan":6}],[{"type":"panel","id":"panelUserTitle","content":"<div style=\"background:#286090; \n            color:#fff; \n            text-align:center; \n            padding-top: 12px; \n            padding-bottom: 15px; \n            margin-top: 37px;\" \n     \n     class='container-fluid jumbotron'>\n\n  <h4>Get Single User</h4>\n\n</div>","border":"0","colSpan":12}],[{"type":"text","variable":"userId","var_uid":"7717877686036a2a465e999026238585","dataType":"string","protectedValue":false,"id":"userId","name":"userId","label":"Enter User ID:","defaultValue":"","placeholder":"","hint":"","required":false,"requiredFieldErrorMessage":"","textTransform":"none","validate":"","validateMessage":"","maxLength":1000,"formula":"","mode":"parent","operation":"","dbConnection":"workflow","dbConnectionLabel":"PM Database","sql":"","var_name":"userId","colSpan":6},{"type":"button","id":"btnGetUser","name":"btnGetUser","label":"Get User","colSpan":6}],[{"type":"panel","id":"panelUserResult","content":"<div class=\"panel panel-default\" id=\"resultPanel\" style=\"height: 100px\">\n\t\n</div>\n","border":"0","colSpan":12}]],"variables":[{"var_uid":"7717877686036a2a465e999026238585","prj_uid":"9843977466035f27f0a9e11010083324","var_name":"userId","var_field_type":"string","var_field_size":10,"var_label":"string","var_dbconnection":"workflow","var_dbconnection_label":"PM Database","var_sql":"","var_null":0,"var_default":"","var_accepted_values":"[]","inp_doc_uid":""}]}]}